name: publish

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  pypi-publish:
    runs-on: ubuntu-latest

    steps:
      - name: checkout-code
        uses: actions/checkout@v4

      - name: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: install-poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      - name: install-dependencies
        run: poetry install --no-interaction

      - name: check-version-is-not-prerelease
        run: |
          # NOTE: get current version from poetry
          VERSION=$(poetry version -s)

          # NOTE: check if version contains pre-release indicators
          if [[ $VERSION == *"dev"* || $VERSION == *"a"* || $VERSION == *"alpha"* || $VERSION == *"b"* || $VERSION == *"beta"* || $VERSION == *"rc"* || $VERSION == *"pre"* ]]; then
            echo "[ERROR]: version $VERSION appears to be a pre-release version. Only stable versions should be tagged for release."
            exit 1
          else
            echo "[INFO]: version $VERSION is a stable release version. Proceeding with publication."
          fi

      - name: publish-to-pypi
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: poetry publish --build --username __token__ --password $POETRY_PYPI_TOKEN_PYPI
